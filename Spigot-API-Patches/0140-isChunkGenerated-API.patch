From 1ed95fc07f6d3e686f998625d821320a3419b70d Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Tue, 21 Aug 2018 19:39:46 -0700
Subject: [PATCH] isChunkGenerated API


diff --git a/src/main/java/org/bukkit/Location.java b/src/main/java/org/bukkit/Location.java
index e546407e..7713f183 100644
--- a/src/main/java/org/bukkit/Location.java
+++ b/src/main/java/org/bukkit/Location.java
@@ -1,5 +1,6 @@
 package org.bukkit;
 
+import com.google.common.base.Preconditions; // Paper
 import java.util.HashMap;
 import java.util.Map;
 import org.bukkit.block.Block;
@@ -517,6 +518,15 @@ public class Location implements Cloneable, ConfigurationSerializable {
     public boolean isChunkLoaded() { return world.isChunkLoaded(locToBlock(x) >> 4, locToBlock(z) >> 4); } // Paper
 
     // Paper start
+    /**
+     * Checks if a {@link Chunk} has been generated at this location.
+     *
+     * @return true if a chunk has been generated at this location
+     */
+    public boolean isGenerated() {
+        Preconditions.checkNotNull(world, "Location has no world!");
+        return world.isChunkGenerated(locToBlock(x) >> 4, locToBlock(z) >> 4);
+    }
 
     /**
      * Sets the position of this Location and returns itself
diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 446d91c5..dd51aa31 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -203,6 +203,17 @@ public interface World extends PluginMessageRecipient, Metadatable {
         return getChunkAt((int) chunkKey, (int) (chunkKey >> 32));
     }
 
+    /**
+     * Checks if a {@link Chunk} has been generated at the specified chunk key,
+     * which is the X and Z packed into a long.
+     *
+     * @param chunkKey The Chunk Key to look up the chunk by
+     * @return true if the chunk has been generated, otherwise false
+     */
+    public default boolean isChunkGenerated(long chunkKey) {
+        return isChunkGenerated((int) chunkKey, (int) (chunkKey >> 32));
+    }
+
     /**
      * This is the Legacy API before Java 8 was supported. Java 8 Consumer is provided,
      * as well as future support
-- 
2.21.0

