From 900cbba0bf66c04a6f65d358b08f39f7c38f2896 Mon Sep 17 00:00:00 2001
From: Alfie Cleveland <alfeh@me.com>
Date: Fri, 25 Nov 2016 13:22:40 +0000
Subject: [PATCH] Optimise removeQueue


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 57d21fc12..8d48d7c0c 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -3,8 +3,10 @@ package net.minecraft.server;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import io.netty.buffer.Unpooled;
+import java.util.ArrayDeque; // Paper
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Deque; // Paper
 import java.util.Iterator;
 import java.util.List;
 import javax.annotation.Nonnull;
@@ -38,7 +40,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public final PlayerInteractManager playerInteractManager;
     public double d;
     public double e;
-    public final List<Integer> removeQueue = Lists.newLinkedList();
+    public final Deque<Integer> removeQueue = new ArrayDeque<>(); // Paper
     private final AdvancementDataPlayer bZ;
     private final ServerStatisticManager ca;
     private float cb = Float.MIN_VALUE;
@@ -286,10 +288,17 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             Iterator iterator = this.removeQueue.iterator();
             int j = 0;
 
-            while (iterator.hasNext() && j < i) {
+            // Paper start
+            /* while (iterator.hasNext() && j < i) {
                 aint[j++] = ((Integer) iterator.next()).intValue();
                 iterator.remove();
+            } */
+
+            Integer integer;
+            while (j < i && (integer = this.removeQueue.poll()) != null) {
+                aint[j++] = integer.intValue();
             }
+            // Paper end
 
             this.playerConnection.sendPacket(new PacketPlayOutEntityDestroy(aint));
         }
@@ -1097,7 +1106,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.lastHealthSent = -1.0F;
         this.ci = -1;
         this.cs.a((RecipeBook) entityplayer.cs);
-        this.removeQueue.addAll(entityplayer.removeQueue);
+        //this.removeQueue.addAll(entityplayer.removeQueue); // Paper
+        if (this.removeQueue != entityplayer.removeQueue) {
+            this.removeQueue.addAll(entityplayer.removeQueue);
+        }
+        // Paper end
         this.cr = entityplayer.cr;
         this.cw = entityplayer.cw;
         this.setShoulderEntityLeft(entityplayer.getShoulderEntityLeft());
-- 
2.13.0

