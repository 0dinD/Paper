From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Sat, 9 Dec 2023 11:47:53 -0800
Subject: [PATCH] add missing Experimental annotations


diff --git a/src/main/java/org/bukkit/FeatureFlag.java b/src/main/java/org/bukkit/FeatureFlag.java
index 5269df59f0e8099a72c6b628ac1b8c84a0d1a5d5..775fda4b299e1d6dba9b293b2f98505ee65186bb 100644
--- a/src/main/java/org/bukkit/FeatureFlag.java
+++ b/src/main/java/org/bukkit/FeatureFlag.java
@@ -14,6 +14,7 @@ public interface FeatureFlag extends Keyed {
     public static final FeatureFlag VANILLA = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("vanilla"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag BUNDLE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("bundle"));
 
     /**
@@ -26,8 +27,10 @@ public interface FeatureFlag extends Keyed {
     public static final FeatureFlag UPDATE_1_20 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_20"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag TRADE_REBALANCE = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("trade_rebalance"));
 
     @MinecraftExperimental
+    @ApiStatus.Experimental // Paper - add missing annotation
     public static final FeatureFlag UPDATE_121 = Bukkit.getUnsafe().getFeatureFlag(NamespacedKey.minecraft("update_1_21"));
 }
diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index fab8dfb1bd80490f6891687914997cc8580542cd..76ace93e930a80496504f1afc2897bc08bf2a6e5 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -145,54 +145,67 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_SLAB(19305, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_STAIRS(11268, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_WALL(24395, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF(15831),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF(17801),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_SLAB(31096, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_STAIRS(7964, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     POLISHED_TUFF_WALL(28886, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICKS(26276),
     /**
      * BlockData: {@link Slab}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_SLAB(11843, Slab.class),
     /**
      * BlockData: {@link Stairs}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_STAIRS(30753, Stairs.class),
     /**
      * BlockData: {@link Wall}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TUFF_BRICK_WALL(11761, Wall.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_TUFF_BRICKS(8601),
     DRIPSTONE_BLOCK(26227),
     /**
@@ -311,12 +324,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WEATHERED_COPPER(19699),
     OXIDIZED_COPPER(19490),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CHISELED_COPPER(12143),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_CHISELED_COPPER(4570),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_CHISELED_COPPER(30876),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_CHISELED_COPPER(27719),
     CUT_COPPER(32519),
     EXPOSED_CUT_COPPER(18000),
@@ -359,12 +376,16 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     WAXED_WEATHERED_COPPER(5960),
     WAXED_OXIDIZED_COPPER(25626),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_CHISELED_COPPER(7500),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_CHISELED_COPPER(30658),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_CHISELED_COPPER(5970),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_CHISELED_COPPER(7735),
     WAXED_CUT_COPPER(11030),
     WAXED_EXPOSED_CUT_COPPER(30043),
@@ -2106,41 +2127,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_DOOR(26809, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_DOOR(13236, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_DOOR(10208, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_DOOR(5348, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_DOOR(9954, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_DOOR(20748, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_DOOR(25073, Door.class),
     /**
      * BlockData: {@link Door}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_DOOR(23888, Door.class),
     /**
      * BlockData: {@link TrapDoor}
@@ -2194,41 +2223,49 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_TRAPDOOR(12110, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_TRAPDOOR(19219, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_TRAPDOOR(28254, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_TRAPDOOR(26518, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_TRAPDOOR(12626, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_TRAPDOOR(11010, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_TRAPDOOR(30709, TrapDoor.class),
     /**
      * BlockData: {@link TrapDoor}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_TRAPDOOR(21450, TrapDoor.class),
     /**
      * BlockData: {@link Gate}
@@ -2530,6 +2567,8 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     EGG(21603, 16),
     COMPASS(24139),
     RECOVERY_COMPASS(12710),
+    @MinecraftExperimental // Paper - add missing annotation
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BUNDLE(16835, 1),
     FISHING_ROD(4167, 1, 64),
     CLOCK(14980),
@@ -2636,6 +2675,7 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Crafter}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     CRAFTER(25243, Crafter.class),
     FILLED_MAP(23504),
     SHEARS(27971, 1, 238),
@@ -2676,8 +2716,10 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
     BEE_SPAWN_EGG(22924),
     BLAZE_SPAWN_EGG(4759),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BOGGED_SPAWN_EGG(12042),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BREEZE_SPAWN_EGG(7580),
     CAT_SPAWN_EGG(29583),
     CAMEL_SPAWN_EGG(14760),
@@ -3189,88 +3231,106 @@ public enum Material implements Keyed, Translatable, net.kyori.adventure.transla
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_GRATE(16221, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_GRATE(7783, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_GRATE(24954, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_GRATE(14122, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_GRATE(11230, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_GRATE(20520, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_GRATE(16533, Waterlogged.class),
     /**
      * BlockData: {@link Waterlogged}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_GRATE(32010, Waterlogged.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     COPPER_BULB(21370, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     EXPOSED_COPPER_BULB(11944, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WEATHERED_COPPER_BULB(10800, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     OXIDIZED_COPPER_BULB(22421, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_COPPER_BULB(23756, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_EXPOSED_COPPER_BULB(5530, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_WEATHERED_COPPER_BULB(13239, CopperBulb.class),
     /**
      * BlockData: {@link CopperBulb}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     WAXED_OXIDIZED_COPPER_BULB(26892, CopperBulb.class),
     /**
      * BlockData: {@link TrialSpawner}
      */
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER(19902, TrialSpawner.class),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_KEY(12725),
     @MinecraftExperimental
     OMINOUS_TRIAL_KEY(4986),
diff --git a/src/main/java/org/bukkit/Particle.java b/src/main/java/org/bukkit/Particle.java
index 690cf2aedf558396a71b20ba2b8ce737c61dfe43..13fc04abacd36af8755ec0061f4b652f1719d3e5 100644
--- a/src/main/java/org/bukkit/Particle.java
+++ b/src/main/java/org/bukkit/Particle.java
@@ -129,14 +129,19 @@ public enum Particle implements Keyed {
     DUST_PLUME("dust_plume"),
     WHITE_SMOKE("white_smoke"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST("gust"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     SMALL_GUST("small_gust"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_EMITTER_LARGE("gust_emitter_large"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     GUST_EMITTER_SMALL("gust_emitter_small"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_SPAWNER_DETECTION("trial_spawner_detection"),
     @MinecraftExperimental
     TRIAL_SPAWNER_DETECTION_OMINOUS("trial_spawner_detection_ominous"),
diff --git a/src/main/java/org/bukkit/Sound.java b/src/main/java/org/bukkit/Sound.java
index ddc4c5097214371108dc945371e1d28811352c38..5a4a1beee97f14d287787353fa2c942175093134 100644
--- a/src/main/java/org/bukkit/Sound.java
+++ b/src/main/java/org/bukkit/Sound.java
@@ -220,40 +220,56 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_CONDUIT_DEACTIVATE("block.conduit.deactivate"),
     BLOCK_COPPER_BREAK("block.copper.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_BREAK("block.copper_bulb.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_FALL("block.copper_bulb.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_HIT("block.copper_bulb.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_PLACE("block.copper_bulb.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_STEP("block.copper_bulb.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_OFF("block.copper_bulb.turn_off"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_BULB_TURN_ON("block.copper_bulb.turn_on"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_CLOSE("block.copper_door.close"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_DOOR_OPEN("block.copper_door.open"),
     BLOCK_COPPER_FALL("block.copper.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_BREAK("block.copper_grate.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_FALL("block.copper_grate.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_HIT("block.copper_grate.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_PLACE("block.copper_grate.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_GRATE_STEP("block.copper_grate.step"),
     BLOCK_COPPER_HIT("block.copper.hit"),
     BLOCK_COPPER_PLACE("block.copper.place"),
     BLOCK_COPPER_STEP("block.copper.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_CLOSE("block.copper_trapdoor.close"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_COPPER_TRAPDOOR_OPEN("block.copper_trapdoor.open"),
     BLOCK_CORAL_BLOCK_BREAK("block.coral_block.break"),
     BLOCK_CORAL_BLOCK_FALL("block.coral_block.fall"),
@@ -546,14 +562,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_POLISHED_DEEPSLATE_PLACE("block.polished_deepslate.place"),
     BLOCK_POLISHED_DEEPSLATE_STEP("block.polished_deepslate.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_BREAK("block.polished_tuff.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_FALL("block.polished_tuff.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_HIT("block.polished_tuff.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_PLACE("block.polished_tuff.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_POLISHED_TUFF_STEP("block.polished_tuff.step"),
     BLOCK_PORTAL_AMBIENT("block.portal.ambient"),
     BLOCK_PORTAL_TRAVEL("block.portal.travel"),
@@ -701,34 +722,46 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     @MinecraftExperimental
     BLOCK_TRIAL_SPAWNER_ABOUT_TO_SPAWN_ITEM("block.trial_spawner.about_to_spawn_item"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_AMBIENT("block.trial_spawner.ambient"),
     @MinecraftExperimental
     BLOCK_TRIAL_SPAWNER_AMBIENT_CHARGED("block.trial_spawner.ambient_charged"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_BREAK("block.trial_spawner.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_CHARGE_ACTIVATE("block.trial_spawner.charge_activate"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_CLOSE_SHUTTER("block.trial_spawner.close_shutter"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_DETECT_PLAYER("block.trial_spawner.detect_player"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_EJECT_ITEM("block.trial_spawner.eject_item"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_FALL("block.trial_spawner.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_HIT("block.trial_spawner.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_OPEN_SHUTTER("block.trial_spawner.open_shutter"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_PLACE("block.trial_spawner.place"),
     @MinecraftExperimental
     BLOCK_TRIAL_SPAWNER_SPAWN_ITEM("block.trial_spawner.spawn_item"),
     @MinecraftExperimental
     BLOCK_TRIAL_SPAWNER_SPAWN_ITEM_BEGIN("block.trial_spawner.spawn_item_begin"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_SPAWN_MOB("block.trial_spawner.spawn_mob"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TRIAL_SPAWNER_STEP("block.trial_spawner.step"),
     BLOCK_TRIPWIRE_ATTACH("block.tripwire.attach"),
     BLOCK_TRIPWIRE_CLICK_OFF("block.tripwire.click_off"),
@@ -736,14 +769,19 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     BLOCK_TRIPWIRE_DETACH("block.tripwire.detach"),
     BLOCK_TUFF_BREAK("block.tuff.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_BREAK("block.tuff_bricks.break"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_FALL("block.tuff_bricks.fall"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_HIT("block.tuff_bricks.hit"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_PLACE("block.tuff_bricks.place"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     BLOCK_TUFF_BRICKS_STEP("block.tuff_bricks.step"),
     BLOCK_TUFF_FALL("block.tuff.fall"),
     BLOCK_TUFF_HIT("block.tuff.hit"),
@@ -874,36 +912,51 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ENTITY_BOAT_PADDLE_LAND("entity.boat.paddle_land"),
     ENTITY_BOAT_PADDLE_WATER("entity.boat.paddle_water"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_AMBIENT("entity.bogged.ambient"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_DEATH("entity.bogged.death"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_HURT("entity.bogged.hurt"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_SHEAR("entity.bogged.shear"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BOGGED_STEP("entity.bogged.step"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_CHARGE("entity.breeze.charge"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_DEATH("entity.breeze.death"),
     @MinecraftExperimental
     ENTITY_BREEZE_DEFLECT("entity.breeze.deflect"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_HURT("entity.breeze.hurt"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_AIR("entity.breeze.idle_air"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_IDLE_GROUND("entity.breeze.idle_ground"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_INHALE("entity.breeze.inhale"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_JUMP("entity.breeze.jump"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_LAND("entity.breeze.land"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SHOOT("entity.breeze.shoot"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_BREEZE_SLIDE("entity.breeze.slide"),
     @MinecraftExperimental
     ENTITY_BREEZE_WHIRL("entity.breeze.whirl"),
@@ -1209,6 +1262,7 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     @MinecraftExperimental
     ENTITY_PARROT_IMITATE_BOGGED("entity.parrot.imitate.bogged"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ENTITY_PARROT_IMITATE_BREEZE("entity.parrot.imitate.breeze"),
     ENTITY_PARROT_IMITATE_CREEPER("entity.parrot.imitate.creeper"),
     ENTITY_PARROT_IMITATE_DROWNED("entity.parrot.imitate.drowned"),
@@ -1591,10 +1645,13 @@ public enum Sound implements Keyed, net.kyori.adventure.sound.Sound.Type { // Pa
     ITEM_BUCKET_FILL_POWDER_SNOW("item.bucket.fill_powder_snow"),
     ITEM_BUCKET_FILL_TADPOLE("item.bucket.fill_tadpole"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_DROP_CONTENTS("item.bundle.drop_contents"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_INSERT("item.bundle.insert"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     ITEM_BUNDLE_REMOVE_ONE("item.bundle.remove_one"),
     ITEM_CHORUS_FRUIT_TELEPORT("item.chorus_fruit.teleport"),
     ITEM_CROP_PLANT("item.crop.plant"),
diff --git a/src/main/java/org/bukkit/Tag.java b/src/main/java/org/bukkit/Tag.java
index cb5890e0e7bccfee2ba32dd4776f1ae1fdd539e8..7f1dc4288c2d324281e11dc582b6f4ef54bde632 100644
--- a/src/main/java/org/bukkit/Tag.java
+++ b/src/main/java/org/bukkit/Tag.java
@@ -1234,6 +1234,7 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing entities which deflect projectiles.
      */
+    @org.jetbrains.annotations.ApiStatus.Experimental @MinecraftExperimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_DEFLECTS_PROJECTILES = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("deflects_projectiles"), EntityType.class);
     /**
      * Vanilla tag representing entities which deflect arrows.
@@ -1244,6 +1245,7 @@ public interface Tag<T extends Keyed> extends Keyed {
     /**
      * Vanilla tag representing entities which can turn in boats.
      */
+    @org.jetbrains.annotations.ApiStatus.Experimental @MinecraftExperimental // Paper - add missing annotation
     Tag<EntityType> ENTITY_TYPES_CAN_TURN_IN_BOATS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("can_turn_in_boats"), EntityType.class);
     /**
      * Vanilla tag representing all entities sensitive to illager enchantments.
diff --git a/src/main/java/org/bukkit/generator/structure/Structure.java b/src/main/java/org/bukkit/generator/structure/Structure.java
index 65d3d8fd5f00114dc388d65321a9affe1b32ce20..8e39f282c771ddafe5d890dcf065c56f0c633647 100644
--- a/src/main/java/org/bukkit/generator/structure/Structure.java
+++ b/src/main/java/org/bukkit/generator/structure/Structure.java
@@ -49,6 +49,7 @@ public abstract class Structure implements Keyed {
     public static final Structure ANCIENT_CITY = getStructure("ancient_city");
     public static final Structure TRAIL_RUINS = getStructure("trail_ruins");
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     public static final Structure TRIAL_CHAMBERS = getStructure("trial_chambers");
 
     private static Structure getStructure(String name) {
diff --git a/src/main/java/org/bukkit/loot/LootTables.java b/src/main/java/org/bukkit/loot/LootTables.java
index 0a3bce3b9d27e6a978e0c40d9f16afb8b2e14e9b..a29b4e72de9d9d605a227c3cf66fc9f180750d27 100644
--- a/src/main/java/org/bukkit/loot/LootTables.java
+++ b/src/main/java/org/bukkit/loot/LootTables.java
@@ -35,38 +35,55 @@ public enum LootTables implements Keyed {
     ANCIENT_CITY_ICE_BOX("chests/ancient_city_ice_box"),
     RUINED_PORTAL("chests/ruined_portal"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD("chests/trial_chambers/reward"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_COMMON("chests/trial_chambers/reward_common"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_RARE("chests/trial_chambers/reward_rare"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_UNIQUE("chests/trial_chambers/reward_unique"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS("chests/trial_chambers/reward_ominous"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON("chests/trial_chambers/reward_ominous_common"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_RARE("chests/trial_chambers/reward_ominous_rare"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE("chests/trial_chambers/reward_ominous_unique"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_SUPPLY("chests/trial_chambers/supply"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR("chests/trial_chambers/corridor"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION("chests/trial_chambers/intersection"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_INTERSECTION_BARREL("chests/trial_chambers/intersection_barrel"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_ENTRANCE("chests/trial_chambers/entrance"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_DISPENSER("dispensers/trial_chambers/corridor"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CHAMBER_DISPENSER("dispensers/trial_chambers/chamber"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_WATER_DISPENSER("dispensers/trial_chambers/water"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBERS_CORRIDOR_POT("pots/trial_chambers/corridor"),
     @MinecraftExperimental
     EQUIPMENT_TRIAL_CHAMBER("equipment/trial_chamber"),
@@ -201,8 +218,10 @@ public enum LootTables implements Keyed {
     PIGLIN_BARTERING("gameplay/piglin_bartering"),
     // Spawners
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBER_KEY("spawners/trial_chamber/key"),
     @MinecraftExperimental
+    @org.jetbrains.annotations.ApiStatus.Experimental // Paper - add missing annotation
     TRIAL_CHAMBER_CONSUMABLES("spawners/trial_chamber/consumables"),
     @MinecraftExperimental
     OMINOUS_TRIAL_CHAMBER_KEY("spawners/ominous/trial_chamber/key"),
